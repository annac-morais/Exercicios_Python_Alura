# -*- coding: utf-8 -*-
"""POO_Alura10_Annac.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oCmsDSg_Ghr-5FOFWHgYRqz3VA04Hiwz

# **Criando Projeto Banco

*   Item de lista
*   Item de lista
"""

# @title Criando Conta e Cliente com Métodos Bancários:

class Cliente:
    def __init__(self, nome, sobrenome, cpf):
        self._nome = nome
        self._sobrenome = sobrenome
        self._cpf = cpf

    def nome_completo(self):
        return f"{self._nome} {self._sobrenome}"

    def exibir_dados(self):
        print(f"Nome: {self._nome} {self._sobrenome}")
        print(f"CPF: {self._cpf}")


class Conta:
    def __init__(self, numero, titular, saldo, limite):
        self._numero = numero
        self._titular = titular
        self._saldo = saldo
        self._limite = limite

    def deposita(self, valor, mostrar=True): # True - exibe o saldo após o depósito. False (transferência) - não exibe (evita repetição de mensagens).
        if valor > 0:
            self._saldo += valor
            if mostrar:
                print(f"\n[Depósito]")
                print(f"Valor depositado: R${valor:.2f}")
                print(f"Saldo atual: R${self._saldo:.2f}")
        else:
            print("Valor inválido para depósito.")

    def saca(self, valor): # Verifica se há saldo/ limite suficiente
        if valor <= self._saldo + self._limite:
            self._saldo -= valor
            print(f"\n[Saque]")
            print(f"Valor sacado: R${valor:.2f}")
            print(f"Saldo atual: R${self._saldo:.2f}")
        else:
            print("Saldo insuficiente.")

    def extrato(self):
        print(f"\n[Extrato da Conta {self._numero}]")
        print(f"Titular: {self._titular.nome_completo()}")
        print(f"Saldo: R${self._saldo:.2f}")
        print(f"Limite: R${self._limite:.2f}")

    def transfere_para(self, destino, valor):
        if valor <= self._saldo + self._limite:
            self._saldo -= valor
            destino.deposita(valor, mostrar=False)
            print(f"\n[Transferência]")
            print(f"Valor transferido: R${valor:.2f}")
            print(f"Para: {destino._titular.nome_completo()}")
            print(f"Saldo atual: R${self._saldo:.2f}")
        else:
            print("Saldo insuficiente para transferência.")


# EXEMPLO DE USO
if __name__ == '__main__': # Garante que o código de teste só será executado quando o arquivo for executado diretamente
    cliente1 = Cliente("João", "Silva", "123.456.789-00")
    cliente2 = Cliente("Maria", "Oliveira", "987.654.321-00")

    conta1 = Conta("123-4", cliente1, 1200.0, 1000.0)
    conta2 = Conta("567-8", cliente2, 550.0, 1000.0)

    print("\n=== CONTA 1 ===")
    conta1.extrato()

    conta1.deposita(300)
    conta1.saca(200)
    conta1.transfere_para(conta2, 500)

    print("\n=== CONTA 2 ===")
    conta2.extrato()
